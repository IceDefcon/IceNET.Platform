//////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// New Project
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////
1. Create Petalinux project

	petalinux-create -t project --template zynqMP -n IceNET.Platform

2. Create Vivado project

	Refresh boards and load ultra96v2
	Change language to VHDL
	Create block design
	Add ZynqMP + Other stuff
	Run automation tool
	Add XDC file :: With IO config
	Generate bitstream and export hardware

3. Petalinux config using HW Destricption

	petalinux-config --get-hw-description hardware/Platform_wrapper.xsa

	Subsystem AUTO Hardware Settings => Serial Settings
	Change to psu_uart_1

	DTG Settings => Kernel Bootargs
	check bootargs

4. Configure Petalinux rootfs

	petalinux-config -c rootfs

	Add:
	Filesystem Packages => misc => python3
	Petalinux Package Groups => packagegroup-petalinux-mraa

5. Build project

	petalinux-build

6. Create Partitions 

	mkimage -f image.its image.ub
	dumpimage -l image.ub

7. Create BOOT.BIN

	petalinux-package --boot --fsbl zynqmp_fsbl.elf --fpga system.bit --pmufw pmufw.elf --atf bl31.elf --u-boot --force

8. Load to BOOT partition

	BOOT.BIN
	image.ub
	boot.scr

9. Load rootfs into rootfs partition

	sudo dd if=rootfs.ext4 of=/dev/sdb2 status=progress
	sync

