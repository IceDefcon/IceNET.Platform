
set DELAY_MAX 1
set DELAY_MIN 1

####################################################################################################################################
# Clock 50MHz
####################################################################################################################################

# Satisfy constraint of the Quartus clock
create_clock -name {CLOCK_50MHz} -period 20 CLOCK_50MHz

# Set setup time :: Data must be stable before the arrival of the active clock edge
set_input_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX -rise [get_nets CLOCK_50MHz]
set_input_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX -fall [get_nets CLOCK_50MHz]

# Set hold time :: Data must be stable before the arrival of the active clock edge
set_input_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN -rise [get_nets CLOCK_50MHz]
set_input_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN -fall [get_nets CLOCK_50MHz]

# Set clock uncertainty constraints for CLOCK_50MHz
set_clock_uncertainty 0.2 -rise_from [get_clocks {CLOCK_50MHz}] -to [get_clocks {CLOCK_50MHz}]
set_clock_uncertainty 0.1 -fall_from [get_clocks {CLOCK_50MHz}] -to [get_clocks {CLOCK_50MHz}]

####################################################################################################################################
# Clock 100MHz
####################################################################################################################################

# Satisfy constraint of the Quartus clock
create_clock -name {CLOCK_100MHz} -period 20 CLOCK_100MHz

# Set setup time :: Data must be stable before the arrival of the active clock edge
set_input_delay -clock [get_clocks CLOCK_100MHz] -max $DELAY_MAX -rise [get_nets CLOCK_100MHz]
set_input_delay -clock [get_clocks CLOCK_100MHz] -max $DELAY_MAX -fall [get_nets CLOCK_100MHz]

# Set hold time :: Data must be stable before the arrival of the active clock edge
set_input_delay -clock [get_clocks CLOCK_100MHz] -min $DELAY_MIN -rise [get_nets CLOCK_100MHz]
set_input_delay -clock [get_clocks CLOCK_100MHz] -min $DELAY_MIN -fall [get_nets CLOCK_100MHz]

# Set clock uncertainty constraints for CLOCK_100MHz
set_clock_uncertainty 0.2 -rise_from [get_clocks {CLOCK_100MHz}] -to [get_clocks {CLOCK_100MHz}]
set_clock_uncertainty 0.1 -fall_from [get_clocks {CLOCK_100MHz}] -to [get_clocks {CLOCK_100MHz}]

####################################################################################################################################
# Clock 200MHz
####################################################################################################################################

# Satisfy constraint of the Quartus clock
create_clock -name {CLOCK_200MHz} -period 20 CLOCK_200MHz

# Set setup time :: Data must be stable before the arrival of the active clock edge
set_input_delay -clock [get_clocks CLOCK_200MHz] -max $DELAY_MAX -rise [get_nets CLOCK_200MHz]
set_input_delay -clock [get_clocks CLOCK_200MHz] -max $DELAY_MAX -fall [get_nets CLOCK_200MHz]

# Set hold time :: Data must be stable before the arrival of the active clock edge
set_input_delay -clock [get_clocks CLOCK_200MHz] -min $DELAY_MIN -rise [get_nets CLOCK_200MHz]
set_input_delay -clock [get_clocks CLOCK_200MHz] -min $DELAY_MIN -fall [get_nets CLOCK_200MHz]

# Set clock uncertainty constraints for CLOCK_200MHz
set_clock_uncertainty 0.2 -rise_from [get_clocks {CLOCK_200MHz}] -to [get_clocks {CLOCK_200MHz}]
set_clock_uncertainty 0.1 -fall_from [get_clocks {CLOCK_200MHz}] -to [get_clocks {CLOCK_200MHz}]

####################################################################################################################################
# Clock 600MHz
####################################################################################################################################

# Satisfy constraint of the Quartus clock
create_clock -name {CLOCK_600MHz} -period 20 CLOCK_600MHz

# Set setup time :: Data must be stable before the arrival of the active clock edge
set_input_delay -clock [get_clocks CLOCK_600MHz] -max $DELAY_MAX -rise [get_nets CLOCK_600MHz]
set_input_delay -clock [get_clocks CLOCK_600MHz] -max $DELAY_MAX -fall [get_nets CLOCK_600MHz]

# Set hold time :: Data must be stable before the arrival of the active clock edge
set_input_delay -clock [get_clocks CLOCK_600MHz] -min $DELAY_MIN -rise [get_nets CLOCK_600MHz]
set_input_delay -clock [get_clocks CLOCK_600MHz] -min $DELAY_MIN -fall [get_nets CLOCK_600MHz]

# Set clock uncertainty constraints for CLOCK_600MHz
set_clock_uncertainty 0.2 -rise_from [get_clocks {CLOCK_600MHz}] -to [get_clocks {CLOCK_600MHz}]
set_clock_uncertainty 0.1 -fall_from [get_clocks {CLOCK_600MHz}] -to [get_clocks {CLOCK_600MHz}]

###########################################################################################################################
# Input Constraints :: relative to the CLOCK_50MHz
###########################################################################################################################

# Button inputs
set_input_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports {BUTTON_1 BUTTON_2 BUTTON_3 BUTTON_4}]
set_input_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports {BUTTON_1 BUTTON_2 BUTTON_3 BUTTON_4}]

# SPI primary inputs
set_input_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports {PRIMARY_CS PRIMARY_MOSI PRIMARY_SCLK}]
set_input_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports {PRIMARY_CS PRIMARY_MOSI PRIMARY_SCLK}]

# SPI secondary inputs
set_input_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports {SECONDARY_CS SECONDARY_MOSI SECONDARY_SCLK}]
set_input_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports {SECONDARY_CS SECONDARY_MOSI SECONDARY_SCLK}]

# UART inputs
set_input_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports {UART_BBB_TX UART_x86_RX}]
set_input_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports {UART_BBB_TX UART_x86_RX}]

# CAN inputs
set_input_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports {CAN_BBB_TX CAN_MPP_RX}]
set_input_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports {CAN_BBB_TX CAN_MPP_RX}]

# Other inputs
set_input_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports {INT_FROM_CPU WDG_INT_FROM_CPU}]
set_input_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports {INT_FROM_CPU WDG_INT_FROM_CPU}]

###########################################################################################################################
# Output Constraints
###########################################################################################################################

# LED outputs
set_output_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports {LED_1 LED_2 LED_3 LED_4 LED_5 LED_6 LED_7 LED_8}]
set_output_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports {LED_1 LED_2 LED_3 LED_4 LED_5 LED_6 LED_7 LED_8}]

# SPI primary outputs
set_output_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports {PRIMARY_MISO}]
set_output_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports {PRIMARY_MISO}]

# SPI secondary outputs
set_output_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports {SECONDARY_MISO}]
set_output_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports {SECONDARY_MISO}]

# UART outputs
set_output_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports {UART_BBB_RX UART_x86_TX}]
set_output_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports {UART_BBB_RX UART_x86_TX}]

# CAN outputs
set_output_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports {CAN_BBB_RX CAN_MPP_TX}]
set_output_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports {CAN_BBB_RX CAN_MPP_TX}]

# PWM output
set_output_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports PWM_SIGNAL]
set_output_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports PWM_SIGNAL]

# Debug signals and logic channels
set_output_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports {LOGIC_CH1 LOGIC_CH2 LOGIC_CH3 LOGIC_CH4 LOGIC_CH5 LOGIC_CH6}]
set_output_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports {LOGIC_CH1 LOGIC_CH2 LOGIC_CH3 LOGIC_CH4 LOGIC_CH5 LOGIC_CH6}]

# Other outputs
set_output_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports {INT_FROM_FPGA WDG_INT_FROM_FPGA}]
set_output_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports {INT_FROM_FPGA WDG_INT_FROM_FPGA}]

###########################################################################################################################
# SDRAM Constraints
###########################################################################################################################

# SDRAM clocks and data signals
set_output_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports {A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12}]
set_output_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports {A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12}]

set_output_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports {D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 D10 D11 D12 D13 D14 D15}]
set_output_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports {D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 D10 D11 D12 D13 D14 D15}]

set_output_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports {CLK_SDRAM BA0 BA1 CAS CKE RAS WE CS LDQM UDQM}]
set_output_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports {CLK_SDRAM BA0 BA1 CAS CKE RAS WE CS LDQM UDQM}]

###########################################################################################################################
# I2C Constraints
###########################################################################################################################

set_input_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports I2C_SDA]
set_input_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports I2C_SDA]

set_output_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports I2C_SCK]
set_output_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports I2C_SCK]

# False path for I2C SDA and SCL
set_false_path -to [get_ports I2C_SDA]
set_false_path -to [get_ports I2C_SCK]

###########################################################################################################################
# NRF905 Constraints
###########################################################################################################################

set_input_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports {NRF905_uCLK NRF905_CD NRF905_AM NRF905_DR NRF905_MISO}]
set_input_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports {NRF905_uCLK NRF905_CD NRF905_AM NRF905_DR NRF905_MISO}]

set_output_delay -clock [get_clocks CLOCK_50MHz] -max $DELAY_MAX [get_ports {NRF905_TX_EN NRF905_TRX_CE NRF905_PWR_UP NRF905_MOSI NRF905_SCK NRF905_CSN}]
set_output_delay -clock [get_clocks CLOCK_50MHz] -min $DELAY_MIN [get_ports {NRF905_TX_EN NRF905_TRX_CE NRF905_PWR_UP NRF905_MOSI NRF905_SCK NRF905_CSN}]

